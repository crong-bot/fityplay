[{"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\App.js":"1","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\Editor.js":"2","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\index.js":"3","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\lexer.js":"4","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\generate.js":"5","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\small.js":"6","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\console.js":"7"},{"size":2083,"mtime":1606399138632,"results":"8","hashOfConfig":"9"},{"size":905,"mtime":1606388267510,"results":"10","hashOfConfig":"9"},{"size":219,"mtime":1606209401243,"results":"11","hashOfConfig":"9"},{"size":1355,"mtime":1606227988260,"results":"12","hashOfConfig":"9"},{"size":2752,"mtime":1606398184129,"results":"13","hashOfConfig":"9"},{"size":14945,"mtime":1606397870523,"results":"14","hashOfConfig":"9"},{"size":473,"mtime":1606384597407,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"en1kfl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\App.js",["31"],"import Editor from './Editor.js';\nimport React, { useState, useEffect } from 'react';\nimport { Console, Hook, Unhook } from 'console-feed';\n\nconst nearley = require('nearley');\nconst grammar = require('./small.js');\nconst generate = require('./generate.js').default;\n\nfunction App() {\n  const [code, setCode] = useState('');\n  /* const [a, setA] = useState(''); */\n  const parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\n  const [logs, setLogs] = useState([]);\n\n  const consoleStyles = {\n    BASE_BACKGROUND_COLOR: 'none',\n    BASE_FONT_SIZE: '1.2rem',\n    LOG_ERROR_BACKGROUND: 'rgba(255,0,0,.1)',\n    LOG_WARN_BACKGROUND: 'rgba(255,255,0,.1)',\n    LOG_INFO_BACKGROUND: 'rgba(0,0,255,.1)',\n  };\n\n  useEffect(() => {\n    Hook(\n      window.console,\n      (log) => setLogs((currLogs) => [...currLogs, log]),\n      false\n    );\n    return () => Unhook(window.console);\n  }, []);\n\n  function CompileandExec() {\n    parser.feed(code);\n    const parserResult = parser.results;\n    const line = generate(parserResult[0][0]);\n    const lines = line.concat(\n      '\\n',\n      `function 화면(...arg) {\n      console.log(...arg)\n    }`\n    );\n    eval(lines);\n    /*     setA(`<html>\n      <body\n      \n      </body>\n      <script>console.log(\"a\")</script>\n    </html>`); */\n  }\n\n  return (\n    <>\n      <div className=\"panel\">\n        <h1 className=\"title\"> fitycode PLAYGROUND</h1>\n        <div className=\"left_pane\">\n          <button className=\"run_btn\" onClick={CompileandExec}>\n            RUN\n          </button>\n          <Editor language=\"javascript\" value={code} onChange={setCode} />\n        </div>\n        <div className=\"right_pane\">\n          <Console\n            logs={logs}\n            variant=\"light\"\n            filter=\"Methods[log]\"\n            styles={consoleStyles}\n          />\n          {/*    <iframe\n            srcDoc={a}\n            title=\"output\"\n            frameBorder=\"0\"\n            sandbox=\"allow-scripts\"\n            width=\"100%\"\n            height=\"100%\"\n          /> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\dd\\Desktop\\playground\\pale\\src\\Editor.js",["32"],"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\index.js",[],"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\lexer.js",[],"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\generate.js",["33"],"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\small.js",["34"],"C:\\Users\\dd\\Desktop\\playground\\pale\\src\\console.js",[],{"ruleId":"35","severity":1,"message":"36","line":42,"column":5,"nodeType":"37","messageId":"38","endLine":42,"endColumn":9},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":33},{"ruleId":"39","severity":1,"message":"44","line":10,"column":9,"nodeType":"41","messageId":"42","endLine":10,"endColumn":21},"no-eval","eval can be harmful.","CallExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'generateJsForStatements' is defined but never used.","'wrapVariable' is assigned a value but never used."]